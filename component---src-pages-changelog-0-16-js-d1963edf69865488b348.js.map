{"version":3,"file":"component---src-pages-changelog-0-16-js-d1963edf69865488b348.js","mappings":"iLAMMA,EAAQC,EAAAA,QAAAA,GAAAA,WAAH,sDAAGA,CAAH,sBAILC,EAAWD,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,0BAIRE,EAAQF,EAAAA,QAAAA,GAAAA,WAAH,sDAAGA,CAAH,yBAsLX,UAlLa,SAACG,GAAD,OACX,gBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,gBAACL,EAAD,qBACA,gBAACE,EAAD,yBACA,oEACyC,IACvC,gBAAC,UAAD,CAAMI,GAAG,oBAAT,mBAFF,6BAGM,gBAAC,UAAD,CAAMA,GAAG,QAAT,OAHN,SAIE,2BACA,2BALF,qLASE,gBAACH,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,aADF,UAGA,0BACE,qCACU,gBAAC,EAAAC,GAAD,qBADV,OACmC,gBAAC,EAAAA,GAAD,gBADnC,KAGA,qCACU,gBAAC,EAAAA,GAAD,eADV,oDAEO,gBAAC,EAAAA,GAAD,kBAFP,yCAKF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,aADF,qBAGA,0BACE,8CACmB,gBAAC,EAAAC,GAAD,gBADnB,sHAKA,qCACU,gBAAC,EAAAA,GAAD,4BADV,8HAGoB,gBAAC,EAAAA,GAAD,cAHpB,gFAOF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,aADF,+BAIA,0BACE,qCACU,gBAAC,EAAAC,GAAD,oBADV,+DAEuB,gBAAC,EAAAA,GAAD,oBAFvB,4FAKA,mCACQ,gBAAC,EAAAA,GAAD,oBADR,kFAEoC,gBAAC,EAAAA,GAAD,mBAFpC,IAEyD,IACvD,gBAAC,EAAAA,GAAD,kBAHF,QAGyB,gBAAC,EAAAA,GAAD,oBAHzB,iBAIE,2BAJF,+DAK+D,IAC7D,gBAAC,EAAAA,GAAD,+BANF,OAMqC,gBAAC,EAAAA,GAAD,+BANrC,MASF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,cADF,iDAIA,0BACE,uFAC6D,IAC3D,gBAAC,EAAAC,GAAD,oBAFF,qHAGkE,2BAHlE,8HAOA,8FAGA,mEACwC,gBAAC,EAAAA,GAAD,cADxC,KACwD,gBAAC,EAAAA,GAAD,eADxD,IACyE,IACvE,gBAAC,EAAAA,GAAD,iBAFF,KAEqB,gBAAC,EAAAA,GAAD,mBAFrB,KAE0C,gBAAC,EAAAA,GAAD,oBAF1C,KAIA,qEAC0C,gBAAC,EAAAA,GAAD,aAD1C,KACyD,gBAAC,EAAAA,GAAD,eADzD,KAEI,gBAAC,EAAAA,GAAD,gBAFJ,KAEsB,gBAAC,EAAAA,GAAD,cAFtB,KAEsC,gBAAC,EAAAA,GAAD,aAFtC,KAEqD,gBAAC,EAAAA,GAAD,WAFrD,IAEkE,IAChE,gBAAC,EAAAA,GAAD,YAHF,KAGgB,gBAAC,EAAAA,GAAD,eAHhB,KAGiC,gBAAC,EAAAA,GAAD,sBAHjC,IAGyD,IACvD,gBAAC,EAAAA,GAAD,kBAJF,KAMA,kEACuC,gBAAC,EAAAA,GAAD,kBADvC,IAC2D,IACzD,gBAAC,EAAAA,GAAD,kBAFF,KAEsB,gBAAC,EAAAA,GAAD,oBAFtB,KAIA,qEAC0C,gBAAC,EAAAA,GAAD,eAD1C,IAC2D,IACzD,gBAAC,EAAAA,GAAD,kBAFF,KAEsB,gBAAC,EAAAA,GAAD,aAFtB,KAEqC,gBAAC,EAAAA,GAAD,WAFrC,KAEkD,gBAAC,EAAAA,GAAD,YAFlD,IAEgE,IAC9D,gBAAC,EAAAA,GAAD,eAHF,KAGmB,gBAAC,EAAAA,GAAD,eAHnB,KAGoC,gBAAC,EAAAA,GAAD,kBAHpC,KAKA,6EACmD,IACjD,gBAAC,EAAAA,GAAD,0BAFF,qIAOF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,cADF,qBAGA,0BACE,4DACiC,gBAAC,EAAAC,GAAD,kBAEjC,8DACmC,gBAAC,EAAAA,GAAD,iBADnC,OACyD,IACvD,gBAAC,EAAAA,GAAD,mBAEF,yEAC8C,gBAAC,EAAAA,GAAD,qBAD9C,qIAKA,8KAMF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,cADF,UAGA,0BACE,+DACoC,gBAAC,EAAAC,GAAD,iBADpC,IACuD,IACrD,gBAAC,EAAAA,GAAD,oBAFF,KAEwB,gBAAC,EAAAA,GAAD,kBAFxB,KAIA,kEACuC,gBAAC,EAAAA,GAAD,eADvC,8IAKA,uDAC4B,gBAAC,EAAAA,GAAD,iBAD5B,8DAIA,4DACiC,gBAAC,EAAAA,GAAD,mBADjC,wDAEuC,gBAAC,EAAAA,GAAD,eAFvC,wCAIE,2BAJF,wGAQA,4CACiB,gBAAC,EAAAA,GAAD,cADjB,6BAC0D,IACxD,gBAAC,EAAAA,GAAD,wBAFF,gDAEwE,IACtE,gBAAC,EAAAA,GAAD,iBAHF,MAMF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,cADF,UAGA,0BACE,8DACmC,gBAAC,EAAAC,GAAD,aADnC,QACqD,gBAAC,EAAAA,GAAD,cADrD,sDAIA,4EACiD,gBAAC,EAAAA,GAAD,aADjD,MAIF,gBAACN,EAAD,KACE,wBAAMI,MAAO,CAAEC,MAAO,YAAtB,aADF,UAGA,0BACE,qDAC0B,gBAAC,EAAAC,GAAD,cAD1B","sources":["webpack://purify-website/./src/pages/changelog/0.16.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Link from 'gatsby-link'\nimport Layout from '../../components/Layout'\nimport { HL } from '../../components/HL'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n`\n\nconst Subtitle = styled.div`\n  padding-bottom: 30px;\n`\n\nconst Topic = styled.h2`\n  font-weight: normal;\n`\n\nconst v016 = (props) => (\n  <Layout location={props.location}>\n    <Title>Purify v0.16</Title>\n    <Subtitle>November 7, 2020</Subtitle>\n    <div>\n      Not sure what purify is? Check out the{' '}\n      <Link to=\"/getting-started\">Getting Started</Link> page. Also check out\n      the <Link to=\"/faq\">FAQ</Link> page!\n      <br />\n      <br />\n      This is a huge release with a lot of changes and I'm really exited! 0.16\n      will be the final 0.x version before the official 1.0.0 release, you can\n      think of 0.16 as a Version 1 RC.\n      <Topic>\n        <span style={{ color: '#d22626' }}>Breaking:</span> Codec\n      </Topic>\n      <ul>\n        <li>\n          Renamed <HL>GetInterface</HL> to <HL>GetType</HL>.\n        </li>\n        <li>\n          Running <HL>decode</HL> will not populate a field inside an object\n          it's <HL>undefined</HL>, instead it will just leave it out.\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#d22626' }}>Breaking:</span> Either and Maybe\n      </Topic>\n      <ul>\n        <li>\n          Removed internal <HL>__value</HL> property inside both Either and\n          Maybe. It was not supposed to be used anyway so there shouldn't be any\n          breakages.\n        </li>\n        <li>\n          Running <HL>Either#unsafeDecode</HL> used to throw a generic error if\n          the value inside was Left. That error is still there, but if the value\n          is an instance of <HL>Error</HL>, it will throw the value instead.\n          This makes debugging and logging easier.\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#d22626' }}>Breaking:</span> EitherAsync and\n        MaybeAsync\n      </Topic>\n      <ul>\n        <li>\n          Removed <HL>liftPromise</HL> from both EitherAsync and MaybeAsync.\n          With the addition of <HL>PromiseLike</HL> support this utility is just\n          an alias for the normal constructors, making it redundant.\n        </li>\n        <li>\n          Since <HL>PromiseLike</HL> is now supported in both modules you should\n          be using the special constructors <HL>liftEither</HL>,{' '}\n          <HL>liftMaybe</HL> and <HL>fromPromise</HL> way less now.\n          <br />\n          Because of that they are now static methods (e.g. to use run{' '}\n          <HL>EitherAsync.liftEither</HL> or <HL>MaybeAsync.fromPromise</HL>)\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> EitherAsync and\n        MaybeAsync (there are a lot)\n      </Topic>\n      <ul>\n        <li>\n          Both EitherAsync and MaybeAsync now extend and support the{' '}\n          <HL>PromiseLike</HL> interface. This means you can await them and you\n          can interchange *Async and PromiseLike in most utility methods. <br />\n          This is a huge win for productivity and reducing boilerplate, I hope\n          we get to see cool examples of how this helps people.\n        </li>\n        <li>\n          Both EitherAsync and MaybeAsync are now fantasy-land compatible.\n        </li>\n        <li>\n          Added static methods to EitherAsync - <HL>lefts</HL>, <HL>rights</HL>,{' '}\n          <HL>sequence</HL>, <HL>liftEither</HL>, <HL>fromPromise</HL>.\n        </li>\n        <li>\n          Added instance methods to EitherAsync - <HL>swap</HL>, <HL>ifLeft</HL>\n          , <HL>ifRight</HL>, <HL>bimap</HL>, <HL>join</HL>, <HL>ap</HL>,{' '}\n          <HL>alt</HL>, <HL>extend</HL>, <HL>leftOrDefault</HL>,{' '}\n          <HL>orDefault</HL>.\n        </li>\n        <li>\n          Added static methods to MaybeAsync - <HL>catMaybes</HL>,{' '}\n          <HL>liftMaybe</HL>, <HL>fromPromise</HL>.\n        </li>\n        <li>\n          Added instance methods to EitherAsync - <HL>ifJust</HL>,{' '}\n          <HL>ifNothing</HL>, <HL>join</HL>, <HL>ap</HL>, <HL>alt</HL>,{' '}\n          <HL>extend</HL>, <HL>filter</HL>, <HL>orDefault</HL>.\n        </li>\n        <li>\n          EitherAsync now has a looser type definition for{' '}\n          <HL>EitherAsync#chain</HL> as it will merge the two errors together in\n          an union type instead of showing a compiler error if the error types\n          are different.\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Either and Maybe\n      </Topic>\n      <ul>\n        <li>\n          Added static method to Maybe - <HL>isMaybe.</HL>\n        </li>\n        <li>\n          Added static methods to Either - <HL>isEither</HL> and{' '}\n          <HL>sequence.</HL>\n        </li>\n        <li>\n          Either now has a looser type definition for <HL>Either#chain</HL> as\n          it will merge the two errors together in an union type instead of\n          showing a compiler error if the error types are different .\n        </li>\n        <li>\n          Either now has a runtime tag so that values are easier to debug\n          (previously when you logged an Either you couldn't tell if it's Left\n          or Right).\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Codec\n      </Topic>\n      <ul>\n        <li>\n          Added new codecs and combinators: <HL>nullable</HL>,{' '}\n          <HL>enumeration</HL>, <HL>intersect</HL>.\n        </li>\n        <li>\n          Added a new property of each codec - <HL>schema</HL>, it returns a\n          JSON Schema V6 of that codec so that you can reuse validation in\n          non-JavaScript environments (tools, other languages etc.).\n        </li>\n        <li>\n          Added a new utility type, <HL>FromType</HL>, that helps with creating\n          codecs based on existing types.\n        </li>\n        <li>\n          Added a new utility function - <HL>parseError</HL>, that takes an\n          error string generated after running <HL>decode</HL> on a value and\n          returns a meta object\n          <br />\n          which you can use to create all kinds of stuff - from custom error\n          reporters to recovery mechanisms.\n        </li>\n        <li>\n          If you use the <HL>maybe</HL> codec combinator inside a{' '}\n          <HL>Codec.interface</HL> it will handle optional properties just like{' '}\n          <HL>optional</HL>.\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Other\n      </Topic>\n      <ul>\n        <li>\n          Added two new methods to Tuple - <HL>some</HL> and <HL>every</HL> that\n          act like the Array methods of the same name.\n        </li>\n        <li>\n          Added a new utility function to NonEmptyList - <HL>tail</HL>.\n        </li>\n      </ul>\n      <Topic>\n        <span style={{ color: '#efb022' }}>Bugfixes:</span> Codec\n      </Topic>\n      <ul>\n        <li>\n          Fixed a critical bug in <HL>oneOf</HL> that caused encoding to fail.\n        </li>\n      </ul>\n    </div>\n  </Layout>\n)\n\nexport default v016\n"],"names":["Title","styled","Subtitle","Topic","props","location","to","style","color","HL"],"sourceRoot":""}