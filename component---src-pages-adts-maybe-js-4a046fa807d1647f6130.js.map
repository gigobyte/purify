{"version":3,"file":"component---src-pages-adts-maybe-js-4a046fa807d1647f6130.js","mappings":"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","sources":["webpack://purify-website/./src/components/DataTypeContent.js","webpack://purify-website/./src/components/DataTypeMethod.js","webpack://purify-website/./src/pages/adts/Maybe.js"],"sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\nimport DataTypeMethod from './DataTypeMethod'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport highlightStyle from 'react-syntax-highlighter/dist/esm/styles/hljs/googlecode'\nimport Layout from './Layout'\n\nconst Container = styled.div``\n\nconst Title = styled.h1`\n  font-weight: inherit;\n\n  @media only screen and (max-width: 768px) {\n    text-align: center;\n    margin-top: 0;\n  }\n`\n\nconst Description = styled.div`\n  padding-right: 15%;\n  font-size: 1.05em;\n\n  @media only screen and (max-width: 768px) {\n    padding-right: 0;\n    text-align: center;\n  }\n`\n\nconst TopicHeader = styled.h2`\n  font-weight: inherit;\n  margin-bottom: 0;\n\n  @media only screen and (max-width: 768px) {\n    text-align: center;\n  }\n`\nconst TypeclassBadges = styled.div`\n  margin-top: -20px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media only screen and (max-width: 768px) {\n    justify-content: center;\n  }\n`\n\nconst TypeclassBadge = styled.span`\n  background-color: #af87e6;\n  border-radius: 6px;\n  color: white;\n  padding: 0px 5px;\n  font-size: 13px;\n  margin-right: 4px;\n  margin-bottom: 5px;\n  text-decoration: none;\n`\n\nconst TypeclassTooltip = styled.div`\n  background-color: #975ce7;\n  border-radius: 100%;\n  width: 17px;\n  position: relative;\n  height: 17px;\n  margin-top: 1px;\n  margin-left: 4px;\n\n  &::after {\n    content: '?';\n    color: white;\n    position: absolute;\n    left: 5px;\n    top: -2px;\n    font-size: 13px;\n  }\n\n  @media (hover: none) {\n    display: none;\n  }\n`\n\nconst ExamplesContainer = styled.div`\n  pre {\n    margin: 0;\n  }\n`\n\nconst ExampleHeader = styled.div`\n  text-align: center;\n  background-color: #f9f4f4;\n  padding: 4px;\n`\n\nconst Example = styled.div`\n  max-width: 650px;\n  margin: 10px 0;\n  border: 1px solid #f3eeee;\n`\n\nconst Guide = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  width: 100%;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid #f3eeee;\n  }\n`\n\nconst DataTypeContent = (adt) => (props) => (\n  <Layout location={props.location}>\n    <Container>\n      <Title>{adt.name}</Title>\n      <TypeclassBadges>\n        {adt.implements.map((typeclass) => (\n          <TypeclassBadge key={typeclass}>{typeclass}</TypeclassBadge>\n        ))}\n        {adt.implements.length > 0 && (\n          <TypeclassTooltip title=\"The badges on the left list all available fantasy-land instances for this data type\" />\n        )}\n      </TypeclassBadges>\n      <Description>{adt.description}</Description>\n      <ExamplesContainer>\n        {adt.examples.map((example) => (\n          <Example>\n            <ExampleHeader>{example.title}</ExampleHeader>\n            <SyntaxHighlighter language=\"javascript\" style={highlightStyle}>\n              {example.content.join('\\n')}\n            </SyntaxHighlighter>\n          </Example>\n        ))}\n        {adt.guides.length > 0 && (\n          <Example>\n            <ExampleHeader>Official Guides</ExampleHeader>\n            {adt.guides.map((guide) => (\n              <Guide to={guide.link}>{guide.title}</Guide>\n            ))}\n          </Example>\n        )}\n      </ExamplesContainer>\n      {adt.content.map((x) => (\n        <>\n          <TopicHeader>{x.title}</TopicHeader>\n          {x.methods.map((method) => DataTypeMethod(x.id, method))}\n        </>\n      ))}\n    </Container>\n  </Layout>\n)\n\nexport default DataTypeContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Highlight } from './HL'\n\nconst Container = styled.div`\n  padding: 15px 0px;\n  border-bottom: 1px solid #b8d1e2;\n  border-style: dashed;\n  border-left: 0;\n  border-top: 0;\n  border-right: 0;\n`\n\nconst MethodName = styled.a`\n  font-size: 19px;\n  color: #3b74d7;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: block;\n    text-align: center;\n    padding-bottom: 5px;\n  }\n`\n\nconst MethodSignature = styled.span`\n  display: inline-block;\n  font-family: Consolas, Menlo, monospace;\n  background-color: #e7edf1;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  &:before {\n    content: ${(props) => (props.ml ? \"'Î»'\" : \"'TS'\")};\n    background-color: ${(props) => (props.ml ? '#9756f3' : '#3b74d7')};\n    color: white;\n    border-bottom-left-radius: 4px;\n    border-top-left-radius: 4px;\n    padding: 3px 5px;\n    display: inline-block;\n    min-width: 13px;\n    text-align: center;\n    letter-spacing: ${(props) => (props.ts ? '-1px' : '0')};\n  }\n\n  @media only screen and (max-width: 768px) {\n    position: relative;\n    text-align: center;\n    width: 100%;\n    margin-bottom: 0;\n    padding: 5px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-top: 1px solid #dfe4e6;\n    font-size: 13px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n\n    &:before {\n      position: absolute;\n      left: 0;\n      padding: 5px 5px;\n      margin-top: -5px;\n    }\n  }\n`\n\nconst MethodSignatureText = styled.span`\n  padding: 0 6px;\n`\n\nconst MethodExample = styled.div`\n  display: flex;\n  background-color: #f0f4ff;\n  border-left: 4px solid #8acefb;\n  padding: 5px;\n  margin: 5px 0;\n  overflow-x: scroll;\n  max-width: calc(95vw - 200px);\n\n  @media only screen and (max-width: 768px) {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    max-width: 100vw;\n  }\n`\n\nconst MethodExampleColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  pre {\n    border-radius: 2px;\n    min-height: 20px;\n    display: flex !important;\n    justify-content: center;\n    flex-direction: column;\n    margin-bottom: 5px;\n    margin-top: 0;\n    background: #f1f5ff !important;\n    padding: 0.3em 0.4em !important;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`\n\nconst MethodDescription = styled.div`\n  width: 70%;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 10px 0;\n  }\n`\n\nconst DataTypeMethod = (categoryId, method) => (\n  <Container key={method.name}>\n    <MethodName\n      id={`${categoryId}-${method.name}`}\n      href={`#${categoryId}-${method.name}`}\n    >\n      {method.name}\n    </MethodName>\n    <div>\n      {method.signatureML && (\n        <MethodSignature ml>\n          <MethodSignatureText>{method.signatureML}</MethodSignatureText>\n        </MethodSignature>\n      )}\n      {method.signatureTS && (\n        <MethodSignature ts>\n          <MethodSignatureText>{method.signatureTS}</MethodSignatureText>\n        </MethodSignature>\n      )}\n      <MethodDescription>{method.description}</MethodDescription>\n      {method.examples.length > 0 && (\n        <MethodExample>\n          <MethodExampleColumn>\n            {method.examples.map((example) => (\n              <Highlight key={example.input}>{example.input}</Highlight>\n            ))}\n          </MethodExampleColumn>\n\n          <MethodExampleColumn>\n            {method.examples.map((example) => (\n              <Highlight key={example.input}>â</Highlight>\n            ))}\n          </MethodExampleColumn>\n\n          <MethodExampleColumn>\n            {method.examples.map((example) => (\n              <Highlight key={example.input}>{example.output}</Highlight>\n            ))}\n          </MethodExampleColumn>\n        </MethodExample>\n      )}\n    </div>\n  </Container>\n)\n\nexport default DataTypeMethod\n","import DataTypeContent from '../../components/DataTypeContent'\nimport data from '../../data'\n\nexport default DataTypeContent(data.datatypes.find((x) => x.name === 'Maybe'))\n"],"names":["Container","styled","Title","Description","TopicHeader","TypeclassBadges","TypeclassBadge","TypeclassTooltip","ExamplesContainer","ExampleHeader","Example","Guide","Link","adt","props","location","name","implements","map","typeclass","key","length","title","description","examples","example","language","style","highlightStyle","content","join","guides","guide","to","link","x","methods","method","DataTypeMethod","id","MethodName","MethodSignature","ml","ts","MethodSignatureText","MethodExample","MethodExampleColumn","MethodDescription","categoryId","href","signatureML","signatureTS","input","output","DataTypeContent","data"],"sourceRoot":""}