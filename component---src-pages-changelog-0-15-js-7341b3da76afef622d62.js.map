{"version":3,"file":"component---src-pages-changelog-0-15-js-7341b3da76afef622d62.js","mappings":"qMAQMA,EAAQC,EAAAA,QAAAA,GAAAA,WAAH,yDAAGA,CAAH,sBAILC,EAAWD,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,0BAIRE,EAAQF,EAAAA,QAAAA,GAAAA,WAAH,yDAAGA,CAAH,yBAILG,EAAmBH,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,kFAqFtB,UA7Ea,SAACI,GAAD,OACX,gBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,gBAACN,EAAD,qBACA,gBAACE,EAAD,uBACA,oEACyC,IACvC,gBAAC,KAAD,CAAMK,GAAG,oBAAT,mBAFF,6BAGM,gBAAC,KAAD,CAAMA,GAAG,QAAT,OAHN,SAIE,4BAEF,gBAACJ,EAAD,KACE,wBAAMK,MAAO,CAAEC,MAAO,YAAtB,mBADF,iBAGA,gBAACL,EAAD,KACE,gBAAC,KAAD,CAAMG,GAAG,eAAT,SADF,UAC4C,gBAAC,EAAAG,GAAD,sBAD5C,gGAIE,2BAJF,0FAMgB,gBAAC,EAAAA,GAAD,iBANhB,gCAM+D,IAC7D,gBAAC,KAAD,CAAMH,GAAG,yBAAT,YAPF,sBASA,gBAACJ,EAAD,yCACA,gBAACC,EAAD,oNAIE,2BAJF,0CAIgD,IAC9C,gBAAC,KAAD,CAAMG,GAAG,mBAAT,QALF,uFAOE,2BAPF,oJAUE,2BAVF,wIAaE,gBAAC,IAAD,CAAmBI,SAAS,aAAaH,MAAOI,EAAAA,GAAhD,wXAeA,gBAAC,IAAD,CAAmBD,SAAS,aAAaH,MAAOI,EAAAA,GAAhD,6QA5BF,+IAqC4E,IAC1E,gBAAC,KAAD,CAAML,GAAG,qBAAT,eAtCF,OAsCsD,IACpD,gBAAC,KAAD,CAAMA,GAAG,oBAAT,cAvCF,IAuCgD,2BAvChD,+IA2CA,gBAACJ,EAAD,sBACA,gBAACC,EAAD,KACE,0BACE,yCACc,gBAAC,EAAAM,GAAD,oBADd,aArEK,C","sources":["webpack://purify-website/./src/pages/changelog/0.15.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Link from 'gatsby-link'\nimport Layout from '../../components/Layout'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport highlightStyle from 'react-syntax-highlighter/dist/esm/styles/hljs/googlecode'\nimport { HL } from '../../components/HL'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n`\n\nconst Subtitle = styled.div`\n  padding-bottom: 30px;\n`\n\nconst Topic = styled.h2`\n  font-weight: normal;\n`\n\nconst TopicDescription = styled.div`\n  padding-right: 15%;\n\n  @media only screen and (max-width: 768px) {\n    padding-right: 0;\n  }\n`\n\nconst v015 = (props) => (\n  <Layout location={props.location}>\n    <Title>Purify v0.15</Title>\n    <Subtitle>April 30, 2020</Subtitle>\n    <div>\n      Not sure what purify is? Check out the{' '}\n      <Link to=\"/getting-started\">Getting Started</Link> page. Also check out\n      the <Link to=\"/faq\">FAQ</Link> page!\n      <br />\n    </div>\n    <Topic>\n      <span style={{ color: '#d22626' }}>Breaking change</span> inside Codec\n    </Topic>\n    <TopicDescription>\n      <Link to=\"/util/Codec\">Codec</Link> had a <HL>undefinedType</HL> codec\n      which was insufficient as there was no way to create optional properties\n      on an object.\n      <br />\n      This was brought up in an issue and to resolve this I removed this codec\n      in favor of a <HL>optional</HL> combinator, please check out{' '}\n      <Link to=\"/utils/Codec#optional\">the docs</Link> on how to use it.\n    </TopicDescription>\n    <Topic>An updated Either/MaybeAsync API</Topic>\n    <TopicDescription>\n      When I first started designing the API for Either and MaybeAsync I wanted\n      to bring the ease of use of proper error handling within IO, just like it\n      is in languages with do-notation and for-comprehensions.\n      <br /> That's why the original API in version{' '}\n      <Link to=\"/changelog/0.12\">0.12</Link> only worked with async/await and I\n      thought and this will be enough for most people.\n      <br />\n      Turns out most people started creating wrappers to make it more chainable\n      and issues started piling in GitHub, no one liked the \"imperative\" API.\n      <br />\n      That's why I decided to spend some time brainstorming a new API, that\n      didn't force people to use async/await, and this is the result:\n      <SyntaxHighlighter language=\"javascript\" style={highlightStyle}>\n        {`// async/await\nconst deleteUser = (req) =>\n    EitherAsync(async ({ liftEither, fromPromise, throwE }) => {\n       const request  = await liftEither(validateRequest(req))\n\n       try {\n           const user = await fromPromise(getUser(request.userId))\n       } catch {\n           throwE(Error.UserDoesNotExist)\n       }\n\n       return deleteUserDb(user)\n    })`}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter language=\"javascript\" style={highlightStyle}>\n        {`// new API\nconst deleteUser = (req) =>\n    liftEither(validateRequest(req))\n        .chain(request => fromPromise(() => getUser(request.userId)))\n        .mapLeft(_     => Error.UserDoesNotExist)\n        .chain(user    => liftPromise(() => deleteUserDb(user)))`}\n      </SyntaxHighlighter>\n      This is stripped down version of the code, just to demonstrate the\n      similarities, for the full version check out the updated documentation of{' '}\n      <Link to=\"/adts/EitherAsync\">EitherAsync</Link> and{' '}\n      <Link to=\"/adts/MaybeAsync\">MaybeAsync</Link>.<br />\n      Both APIs will exist simultaneously and you're free to use whichever you\n      like, much like how you can use both async/await and Promise.then.\n    </TopicDescription>\n    <Topic>Other changes</Topic>\n    <TopicDescription>\n      <ul>\n        <li>\n          Added a new <HL>Either#swap</HL> method\n        </li>\n      </ul>\n    </TopicDescription>\n  </Layout>\n)\n\nexport default v015\n"],"names":["Title","styled","Subtitle","Topic","TopicDescription","props","location","to","style","color","HL","language","highlightStyle"],"sourceRoot":""}